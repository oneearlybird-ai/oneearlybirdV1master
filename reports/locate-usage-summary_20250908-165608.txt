== ROUTE CANDIDATES (app & src/app) ==

== PAGES API FALLBACK (pages/api) ==

== BODY SIGNATURE (db_unavailable|totals|updatedAt) ==
app/api/usage/summary/route.tsx:25:    return Response.json({ ok:false, error:'db_unavailable' }, { status:503 });
app/api/usage/summary/route.ts:14:    return Response.json({ ok: false, error: 'db_unavailable' }, { status: 503 });
src/app/api/usage/summary/route.tsx:25:    return Response.json({ ok:false, error:'db_unavailable' }, { status:503 });
src/app/api/usage/summary/route.ts:25:    return Response.json({ ok:false, error:'db_unavailable' }, { status:503 });

== PG CLIENTS (from 'pg'|new Pool) ==

== NEON SERVERLESS IN USE? ==
app/api/usage/summary/route.tsx:2:import { neon } from '@neondatabase/serverless';
app/api/usage/summary/route.tsx:4:const sql = neon(String(process.env.DATABASE_URL || ''));
app/api/usage/summary/route.ts:2:import { neon } from '@neondatabase/serverless';
app/api/usage/summary/route.ts:4:const sql = neon(String(process.env.DATABASE_URL || ''));
src/app/api/usage/summary/route.tsx:2:import { neon } from '@neondatabase/serverless';
src/app/api/usage/summary/route.tsx:4:const sql = neon(String(process.env.DATABASE_URL || ''));
src/app/api/usage/summary/route.ts:2:import { neon } from '@neondatabase/serverless';
src/app/api/usage/summary/route.ts:4:const sql = neon(String(process.env.DATABASE_URL || ''));

== EXPORTED HANDLERS NEAR MATCHES ==
app/api/usage/summary/route.tsx:6:export async function GET() {
app/api/usage/summary/route.ts:6:export async function GET() {
src/app/api/usage/summary/route.tsx:6:export async function GET() {
src/app/api/usage/summary/route.ts:6:export async function GET() {
